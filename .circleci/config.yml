# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: f70262a98f1af05a17a23d0c29911f27669a9895b9a47f66fd7e7854014352e5
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/jarvis

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x "./cc-test-reporter"
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install numpy scipy coverage flake8 pytest 
            rm -rf jarvis
            git clone https://github.com/knc6/jarvis.git 
            cd jarvis
            python setup.py install 
            pip install -r requirements.txt
      - run: python --version ; pip --version ; pwd ; ls
      - run: flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics
      - run: flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - run: pytest

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      - run:
          command: |
            ./cc-test-reporter before-build
      - run:
          command: |
            . venv/bin/activate
            py.test 


      - run: mkdir test-reports
      - run: coverage report && coverage xml -o test-reports/coverage.xml
      - store_test_results:
         path: test-reports
      - store_artifacts:
         path: test-reports 
          
